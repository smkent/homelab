map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

server {
    listen 443 ssl;
    listen [::]:443 ssl http2;
    set $s3_backend 'https://${MASTODON_S3_BUCKET_HOST}';
    server_name files.${NGINX_HOST};
    keepalive_timeout 30;
    include /etc/nginx/conf.d/common-vhost.include;
    include /etc/nginx/conf.d/common-ssl-options.include;

    location / {
        limit_except GET {
            deny all;
        }

        proxy_set_header Host '${MASTODON_S3_BUCKET_HOST}';
        proxy_set_header Connection '';
        proxy_set_header Authorization '';
        proxy_hide_header Set-Cookie;
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Cache-Control';
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
        proxy_hide_header x-amz-meta-server-side-encryption;
        proxy_hide_header x-amz-server-side-encryption;
        proxy_hide_header x-amz-bucket-region;
        proxy_hide_header x-amzn-requestid;
        proxy_ignore_headers Set-Cookie;
        proxy_ignore_headers Cache-Control;
        proxy_pass $s3_backend;
        proxy_intercept_errors off;

        proxy_ssl_verify off;

        proxy_cache CACHE;
        proxy_cache_valid 200 48h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;

        expires 1y;
        add_header Cache-Control 'public, max-age=120';
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Cache-Status $upstream_cache_status;
    }
}

server {
    listen 443 ssl default_server;
    set $backend "http://mastodon-web:3000";
    set $streaming_backend "http://mastodon-streaming:4000";
    server_name ${NGINX_HOST} *.${NGINX_HOST} ;
    include /etc/nginx/conf.d/common-vhost.include;
    include /etc/nginx/conf.d/common-ssl-options.include;

    location /api/v1/streaming {
        include /etc/nginx/conf.d/common-reverse-proxy.include;
        proxy_pass $streaming_backend;
        proxy_buffering off;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
        tcp_nodelay on;
    }

    location ~ ^/(emoji|packs|system/accounts/avatars|system/media_attachments/files) {
        proxy_ignore_headers Cache-Control;
        proxy_cache CACHE;
        proxy_cache_valid 200 48h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        add_header X-Cache-Status $upstream_cache_status;
        expires 1h;
        include /etc/nginx/conf.d/common-reverse-proxy.include;
        proxy_pass $backend;
    }

    location / {
        include /etc/nginx/conf.d/common-reverse-proxy.include;
        proxy_pass $backend;
    }

    keepalive_timeout    70;
    sendfile             on;
    client_max_body_size 80m;
}
