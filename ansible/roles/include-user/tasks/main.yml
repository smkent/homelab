- name: Create user {{ loop_user.user }}
  ansible.builtin.user:
    name: '{{ loop_user.user }}'
    uid: '{{ loop_user.data.uid or omit }}'
    groups: '{{ loop_user.data.groups|default([]) }}'
    password: "{{ (loop_user.data.password | password_hash('sha512')) if loop_user.data.password|d()
      else '!' }}"
    update_password: on_create
    shell: "{{ loop_user.data.shell|default(None) or '/bin/bash' }}"
    home: '{{ loop_user.data.home|default(None) or omit }}'
    create_home: '{{ loop_user.data.create_home|default(True) }}'
    state: present
  register: user_register

- name: Set check mode user facts
  set_fact:
    user_register: {home: "{{ loop_user.data.home|default(None) or ('/home/' + loop_user.user)
        }}", changed: true}
    dotfiles_exists: {before: true}
  when: ansible_check_mode and user_register.changed

- name: Create .ssh directory
  file:
    path: '{{ user_register.home }}/.ssh'
    mode: 0700
    owner: '{{ loop_user.user }}'
    group: '{{ loop_user.user }}'
    state: directory

- name: Install authorized_keys
  copy:
    dest: '{{ user_register.home }}/.ssh/authorized_keys'
    content: '{{ loop_user.data.authorized_keys }}'
    mode: 0644
    owner: '{{ loop_user.user }}'
    group: '{{ loop_user.user }}'
  when: loop_user.data.authorized_keys|d() != ""

- name: Create .local directory
  file:
    path: '{{ user_register.home }}/.local'
    mode: 0755
    owner: '{{ loop_user.user }}'
    group: '{{ loop_user.user }}'
    state: directory

- include_tasks: dotfiles.yml
  when: loop_user.data.dotfiles|default(False)

- include_tasks: user-packages.yml
  when: loop_user.data.user_packages|default(False)
